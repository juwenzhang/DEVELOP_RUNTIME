name: Auto Release

on:
  push:
    branches: [master, main]
    paths:
      - 'packages/**'
      - '.github/workflows/release.yml'
  pull_request:
    branches: [master, main]
    paths:
      - 'packages/**'
      - '.github/workflows/release.yml'
  # workflow_dispatch: # 允许手动触发

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed_packages: ${{ steps.detect-changes.outputs.changed_packages }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Detect changed packages
        id: detect-changes
        run: |
          changed_files=$(git diff --name-only HEAD^ HEAD)
          packages_dir="packages"
          changed_packages=()
          for file in $changed_files; do
            if [[ $file == $packages_dir/* ]]; then
              package_name=$(echo $file | cut -d'/' -f2)
              if [[ ! "${changed_packages[@]}" =~ "$package_name" ]]; then
                changed_packages+=($package_name)
              fi
            fi
          done
          # 输出 JSON 数组
          echo "changed_packages=$(printf '%s\n' "${changed_packages[@]}" | jq -R . | jq -s .)" >> $GITHUB_OUTPUT
          echo "Changed packages: $(printf '%s\n' "${changed_packages[@]}" | jq -R . | jq -s .)"

  release:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.changed_packages != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: ${{ fromJSON(needs.detect-changes.outputs.changed_packages) }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - uses: pnpm/action-setup@v3
        with:
          version: 10
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'
          registry-url: https://registry.npmjs.org/
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Build the package
        working-directory: packages/${{ matrix.package }}
        run: pnpm run build
      
      - name: Semantic Release
        working-directory: packages/${{ matrix.package }}
        env:
          GITHUB_TOKEN: ${{ secrets.SECRET_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release

  update-workspace-lockfile:
    needs: release
    runs-on: ubuntu-latest
    if: ${{ success() }}
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.SECRET_TOKEN }}
      
      - uses: pnpm/action-setup@v3
        with:
          version: 10
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'
      
      - name: Install dependencies to update lockfile
        run: pnpm install --lockfile-only
      
      - name: Commit updated lockfile
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add pnpm-lock.yaml
          git commit -m "chore: update pnpm-lock.yaml after release" || echo "No changes to commit"
          git push